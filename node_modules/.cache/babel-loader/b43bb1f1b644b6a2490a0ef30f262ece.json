{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nail\\\\Desktop\\\\Site\\\\lang4it\\\\src\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(\"blah\");\n  const [isAllFlipped, setIsAllFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      currentPage,\n      setCurrentPage,\n      isAllFlipped,\n      setIsAllFlipped\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"/gN0XiPf5Pdo6XP1hFz/XHlW1k0=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/Nail/Desktop/Site/lang4it/src/Context.js"],"names":["React","useState","Context","createContext","ContextProvider","children","currentPage","setCurrentPage","isAllFlipped","setIsAllFlipped"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,OAAO,gBAACF,KAAK,CAACG,aAAN,EAAd;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAoC;AAAA;;AAEhC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,MAAD,CAA9C;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AAEA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACK,MAAAA,WAAD;AAAaC,MAAAA,cAAb;AAA4BC,MAAAA,YAA5B;AAAyCC,MAAAA;AAAzC,KAAzB;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAXQD,e;;KAAAA,e;AAaT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst Context=React.createContext()\r\n\r\nfunction ContextProvider({children}){\r\n\r\n    const [currentPage, setCurrentPage] = useState(\"blah\")\r\n\r\n    const [isAllFlipped, setIsAllFlipped] = useState(false)\r\n\r\n    return (\r\n        <Context.Provider value={{currentPage,setCurrentPage,isAllFlipped,setIsAllFlipped}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}