{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nail\\\\Desktop\\\\Site\\\\lang4it\\\\src\\\\App.js\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Flipper from \"./components/Flipper\";\nimport NotFound from \"./components/NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const mainScreenList = [{\n    id: \"symbols\",\n    size: 2,\n    title: \"$ymbols & sign$\",\n    tag: \"upd\",\n    type: \"wordWordFlip\"\n  } // {\n  //     id: \"colors\",\n  //     size: 1,\n  //     title: \"Colors\",\n  //     type: \"colors\"\n  // },\n  // {\n  //     id: \"layout\",\n  //     size: 3,\n  //     title: \"Layout\",\n  //     type: \"wordPicFlip\"\n  // },\n  // {\n  //     id: \"grid\",\n  //     size: 1,\n  //     title: \"Grid\",\n  //     type: \"wordPicFlip\"\n  // },\n  // {\n  //     id: \"spacing\",\n  //     size: 3,\n  //     title: \"Spacing\",\n  //     tag: \"new\",\n  //     type: \"wordPicFlip\"\n  // }\n  ];\n  const mainListToRender = mainScreenList.map(item => /*#__PURE__*/_jsxDEV(Route, {\n    path: `/${item.id}`,\n    element: /*#__PURE__*/_jsxDEV(Flipper, {\n      type: item.type,\n      id: item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 110\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 58\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          mainScreenList: mainScreenList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), mainListToRender, /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nail/Desktop/Site/lang4it/src/App.js"],"names":["Header","Main","Routes","Route","Flipper","NotFound","App","mainScreenList","id","size","title","tag","type","mainListToRender","map","item"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,SAASC,GAAT,GAAe;AAEX,QAAMC,cAAc,GAChB,CACI;AACIC,IAAAA,EAAE,EAAE,SADR;AAEIC,IAAAA,IAAI,EAAE,CAFV;AAGIC,IAAAA,KAAK,EAAE,iBAHX;AAIIC,IAAAA,GAAG,EAAE,KAJT;AAKIC,IAAAA,IAAI,EAAE;AALV,GADJ,CAQI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCJ,GADJ;AAqCA,QAAMC,gBAAgB,GAAGN,cAAc,CAACO,GAAf,CAAmBC,IAAI,iBAAK,QAAC,KAAD;AAAsB,IAAA,IAAI,EAAG,IAAGA,IAAI,CAACP,EAAG,EAAxC;AAA2C,IAAA,OAAO,eAAE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEO,IAAI,CAACH,IAApB;AAA0B,MAAA,EAAE,EAAEG,IAAI,CAACP;AAAnC;AAAA;AAAA;AAAA;AAAA;AAApD,KAAYO,IAAI,CAACP,EAAjB;AAAA;AAAA;AAAA;AAAA,UAA5B,CAAzB;AAMF,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,cAAc,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,EAESM,gBAFT,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAzDQP,G;AA2DT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport {Routes, Route} from \"react-router-dom\"\r\nimport Flipper from \"./components/Flipper\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const mainScreenList =\r\n        [\r\n            {\r\n                id: \"symbols\",\r\n                size: 2,\r\n                title: \"$ymbols & sign$\",\r\n                tag: \"upd\",\r\n                type: \"wordWordFlip\"\r\n            },\r\n            // {\r\n            //     id: \"colors\",\r\n            //     size: 1,\r\n            //     title: \"Colors\",\r\n            //     type: \"colors\"\r\n            // },\r\n            // {\r\n            //     id: \"layout\",\r\n            //     size: 3,\r\n            //     title: \"Layout\",\r\n            //     type: \"wordPicFlip\"\r\n            // },\r\n            // {\r\n            //     id: \"grid\",\r\n            //     size: 1,\r\n            //     title: \"Grid\",\r\n            //     type: \"wordPicFlip\"\r\n            // },\r\n            // {\r\n            //     id: \"spacing\",\r\n            //     size: 3,\r\n            //     title: \"Spacing\",\r\n            //     tag: \"new\",\r\n            //     type: \"wordPicFlip\"\r\n            // }\r\n\r\n        ]\r\n\r\n    const mainListToRender = mainScreenList.map(item => (<Route key={item.id}  path={`/${item.id}`} element={<Flipper type={item.type} id={item.id}/>}/>))\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n        <Routes>\r\n            <Route  path=\"/\" element={<Main mainScreenList={mainScreenList}/>}/>\r\n                {mainListToRender}\r\n            <Route path=\"*\" element={<NotFound/>}/>\r\n        </Routes>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}