[{"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\index.js":"1","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\Context.js":"2","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\App.js":"3","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Header.js":"4","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Main.js":"5","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Flipper.js":"6","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\NotFound.js":"7","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\Dashboard.js":"8","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Flip2Match.js":"9","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Thumbnail.js":"10","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\PictureWordFlipper.js":"11","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\UserBox.js":"12","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ArrayMixer.js":"13","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Colors.js":"14","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\LoginPass.js":"15","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\WordWordFlipper.js":"16","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\MyCard2.js":"17","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\MyCard.js":"18","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\LinkToFlip2Match.js":"19","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\UserImage.js":"20","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\Badge.js":"21","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ActionsPane.js":"22","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ShowAll.js":"23","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\HideAll.js":"24"},{"size":432,"mtime":1650907738625,"results":"25","hashOfConfig":"26"},{"size":872,"mtime":1665081811947,"results":"27","hashOfConfig":"26"},{"size":2050,"mtime":1665081811947,"results":"28","hashOfConfig":"26"},{"size":664,"mtime":1665081811951,"results":"29","hashOfConfig":"26"},{"size":529,"mtime":1650907738622,"results":"30","hashOfConfig":"26"},{"size":1083,"mtime":1651786837338,"results":"31","hashOfConfig":"26"},{"size":125,"mtime":1650907738623,"results":"32","hashOfConfig":"26"},{"size":598,"mtime":1665081811949,"results":"33","hashOfConfig":"26"},{"size":3730,"mtime":1665081811950,"results":"34","hashOfConfig":"26"},{"size":555,"mtime":1650907738623,"results":"35","hashOfConfig":"26"},{"size":584,"mtime":1665081811952,"results":"36","hashOfConfig":"26"},{"size":588,"mtime":1665081811950,"results":"37","hashOfConfig":"26"},{"size":865,"mtime":1665081811948,"results":"38","hashOfConfig":"26"},{"size":453,"mtime":1650907738622,"results":"39","hashOfConfig":"26"},{"size":4005,"mtime":1652033336614,"results":"40","hashOfConfig":"26"},{"size":445,"mtime":1650907738623,"results":"41","hashOfConfig":"26"},{"size":1723,"mtime":1665081811952,"results":"42","hashOfConfig":"26"},{"size":1020,"mtime":1650907738623,"results":"43","hashOfConfig":"26"},{"size":307,"mtime":1665081811951,"results":"44","hashOfConfig":"26"},{"size":488,"mtime":1665081811950,"results":"45","hashOfConfig":"26"},{"size":588,"mtime":1665081811948,"results":"46","hashOfConfig":"26"},{"size":279,"mtime":1650907738621,"results":"47","hashOfConfig":"26"},{"size":1786,"mtime":1650907738623,"results":"48","hashOfConfig":"26"},{"size":2067,"mtime":1650907738622,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"1k3lbw3",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\index.js",["107","108"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\r\nimport App from './App';\r\nimport {ContextProvider} from \"./Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ContextProvider>\r\n          <Router>\r\n              <App/>\r\n          </Router>\r\n      </ContextProvider>\r\n\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\Context.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\App.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Header.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Main.js",["109"],"import React, {useContext, useEffect} from \"react\"\r\nimport {Context} from \"../Context\"\r\n\r\nimport Thumbnail from \"./Thumbnail\";\r\n\r\nfunction Main({mainScreenList}){\r\n    const {setCurrentPage} = useContext(Context)\r\n\r\n    const elementsForMainScreen = mainScreenList.map(item => (\r\n        <Thumbnail key={item.id} item={item} />\r\n    ))\r\n\r\nuseEffect(()=> {\r\n    setCurrentPage(\"\")\r\n},[])\r\n\r\n    return(\r\n        <>\r\n        <main>\r\n            {elementsForMainScreen}\r\n        </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Flipper.js",["110","111"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport masterlist from \"../source.json\"\r\nimport NotFound from \"./NotFound\";\r\nimport {Context} from \"../Context\"\r\nimport PictureWordFlipper from \"./PictureWordFlipper\";\r\nimport Colors from \"./Colors\";\r\nimport WordWordFlipper from \"./WordWordFlipper\";\r\nimport LoginPass from \"./LoginPass\";\r\n\r\nfunction Flipper({type, id}){\r\n\r\n    const {setCurrentPage} = useContext(Context);\r\n\r\n    function ComponentToRender(){\r\n        if (type===\"wordPicFlip\"){\r\n            return (<PictureWordFlipper target={id}/>)\r\n        }\r\n        else if (type===\"colors\"){\r\n            return (<Colors/>)\r\n        }\r\n        else if(type===\"wordWordFlip\"){\r\n            return (<WordWordFlipper target={id}/>)\r\n        }\r\n        else if(type===\"LoginPass\"){\r\n            return(<LoginPass/>)\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setCurrentPage(id)\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"for-cards\">\r\n            {masterlist[id] ? ComponentToRender() : <NotFound/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flipper","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\NotFound.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\Dashboard.js",["112"],"import React, {useEffect, useContext} from \"react\"\r\nimport {Context} from \"../../Context\"\r\nimport \"./Dashboard.css\"\r\nimport UserBox from \"./UserBox\"\r\nimport learnersList from \"../../learners.json\"\r\n\r\nfunction Dashboard (){\r\n\r\n    const {setCurrentPage} = useContext(Context);\r\n\r\n    useEffect(()=> {\r\n        setCurrentPage(\"dashboard\")\r\n    },[])\r\n\r\n    const learners = learnersList[\"learners\"].map(item => <UserBox user={item[\"name\"]} status={item[\"status\"]} badges={item[\"badges\"]} />) \r\n\r\n    return(\r\n        <div>\r\n            {learners}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Flip2Match.js",["113","114","115","116","117","118","119","120","121"],"import React, {useState, useEffect,useContext} from \"react\"\r\nimport masterlist from \"../source.json\";\r\nimport MyCard2 from \"./MyCard2\";\r\nimport ArrayMixer from \"./ArrayMixer\";\r\nimport {Context} from \"../Context\"\r\n\r\n\r\n\r\nfunction Flip2Match (){\r\n    const {currentPage, activeGroup, listOfOpened, listOfGuessed} = useContext(Context);\r\n\r\n    const [forceClose, setForceClose] = useState(false)\r\n\r\n    const target = currentPage\r\n    console.log(\"Fired parent\")\r\n\r\n\r\n    activeGroup.length < 1 && ArrayMixer()\r\n\r\n\r\n\r\n    // const [forcedClose, setForcedClose]=useState(-1)\r\n\r\n    const listToDisplay =[]\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (forcedClose > 0){\r\n    //         populator()\r\n    //     }\r\n    // }, [forcedClose])\r\n\r\n    function populator(){\r\n        console.log(\"HERE\")\r\n        for (let i =0; i<activeGroup.length; i++){\r\n            if (listOfOpened.includes(activeGroup[i].id))\r\n\r\n            {\r\n                \r\n                if (activeGroup[i].type === \"pic\"){\r\n                    listToDisplay.push(\r\n                    <MyCard2 \r\n                        key={activeGroup[i].item+\"pic\"}\r\n                        cardId={activeGroup[i].id} \r\n                        front={<img src={`${process.env.PUBLIC_URL}/img/cardBack.png`}/>} \r\n                        back={<img src={`${process.env.PUBLIC_URL}/img/${target}/${activeGroup[i].item}.svg`}/>} \r\n                        isFlipped={true}\r\n                        isActive={false}\r\n                        \r\n                    />\r\n                    )\r\n                }\r\n                else if (activeGroup[i].type === \"word\"){\r\n                    listToDisplay.push(\r\n                    <MyCard2 \r\n                            key={activeGroup[i].item+\"word\"}\r\n                            cardId={activeGroup[i].id} \r\n                            front={<img src={`${process.env.PUBLIC_URL}/img/cardBack.png`}/>} \r\n                            back={activeGroup[i].item} \r\n                            isFlipped={true}\r\n                            isActive={false}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                if (activeGroup[i].type === \"pic\"){\r\n                    listToDisplay.push(\r\n                    <MyCard2 \r\n                        key={activeGroup[i].item+\"pic\"}\r\n                        cardId={activeGroup[i].id} \r\n                        front={<img src={`${process.env.PUBLIC_URL}/img/cardBack.png`}/>} \r\n                        back={<img src={`${process.env.PUBLIC_URL}/img/${target}/${activeGroup[i].item}.svg`}/>} \r\n                        isFlipped={false}\r\n                        isActive={true}\r\n                        isForceClosed = {forceClose}\r\n                        setForceClose={setForceClose}\r\n                     />\r\n                    )\r\n                }\r\n                else if (activeGroup[i].type === \"word\"){\r\n                    listToDisplay.push(\r\n                    <MyCard2 \r\n                            key={activeGroup[i].item+\"word\"}\r\n                            cardId={activeGroup[i].id} \r\n                            front={<img src={`${process.env.PUBLIC_URL}/img/cardBack.png`}/>} \r\n                            back={activeGroup[i].item} \r\n                            isFlipped={false}\r\n                            isActive={true}\r\n                            isForceClosed = {forceClose}\r\n                            setForceClose={setForceClose}\r\n                        />\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    populator()\r\n\r\n    return(\r\n        <div>\r\n           \r\n            <div>{listToDisplay}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flip2Match","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Thumbnail.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\PictureWordFlipper.js",["122"],"import React from \"react\"\r\nimport masterlist from \"../source.json\";\r\nimport MyCard from \"./MyCard\";\r\nimport ActionsPane from \"./ActionsPane\";\r\nimport LinkToFlip2Match from \"./LinkToFlip2Match\";\r\n\r\nfunction PictureWordFlipper({target}){\r\n\r\n    const listOfCards = masterlist[target].map(item => <MyCard key={item} front={<img src={`${process.env.PUBLIC_URL}/img/${target}/${item}.svg`}/>} back={item} isFlipped={false}/>)\r\n\r\n    return (\r\n        <>\r\n        {listOfCards}\r\n        <ActionsPane />\r\n        <LinkToFlip2Match />\r\n        </>\r\n    )\r\n}\r\nexport default PictureWordFlipper","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\UserBox.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ArrayMixer.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Colors.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\LoginPass.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\WordWordFlipper.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\MyCard2.js",["123"],"import React, {useState,useContext, useEffect} from \"react\";\r\nimport {Context} from \"../Context\"\r\n\r\n\r\nfunction MyCard2 ({front, back, isFlipped, isActive, background=\"transparent\", cardId, isForceClose, setForceClose}) {\r\n\r\n    const {listOfGuessed, setListOfGuessed, setListOfOpened} = useContext(Context);\r\n    const [isCardFlipped, setIsCardFlipped] = useState(isFlipped);\r\n\r\n    function opener(){\r\n        if(isActive){\r\n            setIsCardFlipped(true)\r\n\r\n            if(listOfGuessed.length === 0){\r\n                setListOfGuessed([cardId])\r\n                console.log(\"first guess\")\r\n            }\r\n            else if (listOfGuessed.length === 1){\r\n                if(listOfGuessed[0]===cardId){\r\n                    setListOfOpened(ids => [...ids, cardId])\r\n                    setListOfGuessed([])\r\n                    console.log(\"second guess correct\")\r\n                }\r\n                else{\r\n                    setListOfGuessed([])\r\n                    console.log(\"second guess wrong\")\r\n                    setForceClose(true)\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    function closer(){\r\n        if(isActive){\r\n            setIsCardFlipped(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={isCardFlipped && !isForceClose ? \"Mycard flipped\" : \"Mycard\"}>\r\n            <div className='Mycard-inner'>\r\n                <div style={{background: background}} className='Mycard-front' onClick={()=>{opener()}}>\r\n                    {front}\r\n                </div>\r\n                <div className='Mycard-back' onClick={()=>closer()}>\r\n                    {back}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCard2","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\MyCard.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\LinkToFlip2Match.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\UserImage.js",["124"],"import React from \"react\"\r\n\r\nfunction UserImage ({user, status}){\r\n    return(\r\n        <div className=\"userImageContainer\">\r\n            <img src={`${process.env.PUBLIC_URL}/img/dashboard/users/${user}.jpg`} onError={(e) => (e.currentTarget.src = `${process.env.PUBLIC_URL}/img/dashboard/users/default_user.png`)}/>\r\n            <div className=\"userName for-title\">{user}</div>\r\n            <div className=\"userStatus\">{status}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserImage","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\Dashboard\\Badge.js",["125"],"import React from \"react\"\r\nimport learnersList from \"../../badges.json\"\r\n\r\nfunction Badge({type, amount}){\r\n\r\n    const theTitle = learnersList[type]?.title ?? type\r\n    const description = learnersList[type]?.description\r\n\r\n    return(\r\n        <div className=\"badgeContainer\">\r\n            <img className=\"badge\" src={`${process.env.PUBLIC_URL}/img/dashboard/badges/${type}.png`}/>\r\n            {amount > 1 && <div className=\"multiplier\">{amount}X</div>}\r\n            <span className=\"tooltip\"><b>{theTitle}</b><br/>{description}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Badge","C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ActionsPane.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\ShowAll.js",[],"C:\\Users\\Nail\\Desktop\\Site\\lang4it\\src\\components\\HideAll.js",[],{"ruleId":"126","severity":1,"message":"127","line":3,"column":34,"nodeType":"128","messageId":"129","endLine":3,"endColumn":39},{"ruleId":"126","severity":1,"message":"130","line":3,"column":41,"nodeType":"128","messageId":"129","endLine":3,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":15,"column":3,"nodeType":"133","endLine":15,"endColumn":5,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"135","line":1,"column":39,"nodeType":"128","messageId":"129","endLine":1,"endColumn":47},{"ruleId":"131","severity":1,"message":"136","line":31,"column":7,"nodeType":"133","endLine":31,"endColumn":9,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":13,"column":7,"nodeType":"133","endLine":13,"endColumn":9,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"140","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":18},{"ruleId":"126","severity":1,"message":"141","line":10,"column":52,"nodeType":"128","messageId":"129","endLine":10,"endColumn":65},{"ruleId":"142","severity":1,"message":"143","line":45,"column":32,"nodeType":"144","endLine":45,"endColumn":89},{"ruleId":"142","severity":1,"message":"143","line":46,"column":31,"nodeType":"144","endLine":46,"endColumn":112},{"ruleId":"142","severity":1,"message":"143","line":58,"column":36,"nodeType":"144","endLine":58,"endColumn":93},{"ruleId":"142","severity":1,"message":"143","line":72,"column":32,"nodeType":"144","endLine":72,"endColumn":89},{"ruleId":"142","severity":1,"message":"143","line":73,"column":31,"nodeType":"144","endLine":73,"endColumn":112},{"ruleId":"142","severity":1,"message":"143","line":86,"column":36,"nodeType":"144","endLine":86,"endColumn":93},{"ruleId":"142","severity":1,"message":"143","line":9,"column":82,"nodeType":"144","endLine":9,"endColumn":148},{"ruleId":"126","severity":1,"message":"139","line":1,"column":37,"nodeType":"128","messageId":"129","endLine":1,"endColumn":46},{"ruleId":"142","severity":1,"message":"143","line":6,"column":13,"nodeType":"144","endLine":6,"endColumn":191},{"ruleId":"142","severity":1,"message":"143","line":11,"column":13,"nodeType":"144","endLine":11,"endColumn":104},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentPage'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setCurrentPage'. Either include them or remove the dependency array.",["146"],["147"],"'useEffect' is defined but never used.","'masterlist' is defined but never used.","'listOfGuessed' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},"Update the dependencies array to be: [setCurrentPage]",{"range":"153","text":"154"},"Update the dependencies array to be: [id, setCurrentPage]",{"range":"155","text":"156"},{"range":"157","text":"154"},[383,385],"[setCurrentPage]",[910,912],"[id, setCurrentPage]",[344,346]]